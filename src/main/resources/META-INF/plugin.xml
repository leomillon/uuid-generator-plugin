<idea-plugin>
    <id>com.github.leomillon.uuidgenerator</id>
    <name>UUID Generator</name>
    <version>XXX</version>
    <vendor email="millon.leo@gmail.com" url="https://github.com/leomillon">LÃ©o Millon (@leo_millon)</vendor>

    <description><![CDATA[ Description will be added by gradle build]]></description>

    <change-notes><![CDATA[ Change notes will be added by gradle build]]></change-notes>

    <idea-version since-build="201.6668"/>

    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!--UUID-->
        <applicationConfigurable instance="com.github.leomillon.uuidgenerator.settings.uuid.UUIDGeneratorConfigurable"/>

        <applicationService serviceInterface="com.github.leomillon.uuidgenerator.settings.uuid.UUIDGeneratorSettings"
                            serviceImplementation="com.github.leomillon.uuidgenerator.settings.uuid.UUIDGeneratorSettings"/>

        <applicationService serviceInterface="com.github.leomillon.uuidgenerator.popup.uuid.UUIDGeneratorPopupSettings"
                            serviceImplementation="com.github.leomillon.uuidgenerator.popup.uuid.UUIDGeneratorPopupSettings"/>

        <!--ULID-->
        <applicationConfigurable instance="com.github.leomillon.uuidgenerator.settings.ulid.ULIDGeneratorConfigurable"/>

        <applicationService serviceInterface="com.github.leomillon.uuidgenerator.settings.ulid.ULIDGeneratorSettings"
                            serviceImplementation="com.github.leomillon.uuidgenerator.settings.ulid.ULIDGeneratorSettings"/>

        <applicationService serviceInterface="com.github.leomillon.uuidgenerator.popup.ulid.ULIDGeneratorPopupSettings"
                            serviceImplementation="com.github.leomillon.uuidgenerator.popup.ulid.ULIDGeneratorPopupSettings"/>

        <!--CUID-->
        <applicationConfigurable instance="com.github.leomillon.uuidgenerator.settings.cuid.CUIDGeneratorConfigurable"/>

        <applicationService serviceInterface="com.github.leomillon.uuidgenerator.settings.cuid.CUIDGeneratorSettings"
                            serviceImplementation="com.github.leomillon.uuidgenerator.settings.cuid.CUIDGeneratorSettings"/>

        <applicationService serviceInterface="com.github.leomillon.uuidgenerator.popup.cuid.CUIDGeneratorPopupSettings"
                            serviceImplementation="com.github.leomillon.uuidgenerator.popup.cuid.CUIDGeneratorPopupSettings"/>

        <annotator language=""
                   implementationClass="com.github.leomillon.uuidgenerator.annotator.uuid.UUIDDefaultAnnotator"/>
        <annotator language=""
                   implementationClass="com.github.leomillon.uuidgenerator.annotator.ulid.ULIDDefaultAnnotator"/>
        <annotator language=""
                   implementationClass="com.github.leomillon.uuidgenerator.annotator.cuid.CUIDDefaultAnnotator"/>
        <annotator language=""
                   implementationClass="com.github.leomillon.uuidgenerator.annotator.IdPlaceholderAnnotator"/>
    </extensions>

    <actions>
        <!-- Common actions -->
        <action id="uuidgenerator.template.selection"
                class="com.github.leomillon.uuidgenerator.action.ReplacePlaceholdersInSelectionAction"
                text="Replace Random ID Placeholders in Selection"
                description="Find and replace random ID placeholders in selection">
            <add-to-group group-id="EditorActions"/>
        </action>

        <!-- UUID actions -->
        <action id="uuidgenerator.random"
                class="com.github.leomillon.uuidgenerator.action.uuid.GenerateUUIDRandomAction"
                text="Random UUID"
                description="Generate a Universally Unique Identifier (UUID)">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt U"
                               second-keystroke="shift meta alt U"/>
        </action>
        <action id="uuidgenerator.to-clipboard"
                class="com.github.leomillon.uuidgenerator.action.uuid.GenerateUUIDToClipboardAction"
                text="Generate UUID to clipboard"
                description="Generate a new UUID to clipboard">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt U"
                               second-keystroke="shift meta alt C"/>
        </action>
        <action id="uuidgenerator.on-demand-popup"
                class="com.github.leomillon.uuidgenerator.action.uuid.GenerateUUIDPopupAction"
                text="Generate UUID Popup"
                description="Show the UUID generator Popup">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt U"
                               second-keystroke="shift meta alt P"/>
        </action>
        <action id="uuidgenerator.toggle-dashes" class="com.github.leomillon.uuidgenerator.action.ToggleDashesAction"
                text="Toggle UUID dashes"
                description="Toggle the dashes of a valid UUID">
            <add-to-group group-id="EditorActions"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt T"
                               second-keystroke="shift meta alt T"/>
        </action>
        <action id="uuidgenerator.reformat" class="com.github.leomillon.uuidgenerator.action.uuid.ReformatUUIDAction"
                text="Reformat UUID with settings"
                description="Reformat UUID using the user UUID format settings">
            <add-to-group group-id="EditorActions"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt U"
                               second-keystroke="shift meta alt R"/>
        </action>

        <action id="uuidgenerator.replace.selection"
                class="com.github.leomillon.uuidgenerator.action.uuid.ReplaceUUIDsInSelectionAction"
                text="Replace Distinct UUIDs in Selection"
                description="Find and replace existing distinct UUIDs in selection">
            <add-to-group group-id="EditorActions"/>
        </action>

        <!-- ULID actions -->
        <action id="ulidgenerator.random"
                class="com.github.leomillon.uuidgenerator.action.ulid.GenerateULIDRandomAction"
                text="Random ULID"
                description="Generate a Universally Unique Lexicographically Sortable Identifier (ULID)">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt L"
                               second-keystroke="shift meta alt U"/>
        </action>
        <action id="ulidgenerator.to-clipboard"
                class="com.github.leomillon.uuidgenerator.action.ulid.GenerateULIDToClipboardAction"
                text="Generate ULID to clipboard"
                description="Generate a new ULID to clipboard">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt L"
                               second-keystroke="shift meta alt C"/>
        </action>
        <action id="ulidgenerator.on-demand-popup"
                class="com.github.leomillon.uuidgenerator.action.ulid.GenerateULIDPopupAction"
                text="Generate ULID Popup"
                description="Show the ULID generator Popup">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt L"
                               second-keystroke="shift meta alt P"/>
        </action>

        <!-- CUID actions -->
        <action id="cuidgenerator.random"
                class="com.github.leomillon.uuidgenerator.action.cuid.GenerateCUIDRandomAction"
                text="Random CUID"
                description="Generate a Collision Resistant Unique Identifier (CUID)">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt O"
                               second-keystroke="shift meta alt U"/>
        </action>
        <action id="cuidgenerator.to-clipboard"
                class="com.github.leomillon.uuidgenerator.action.cuid.GenerateCUIDToClipboardAction"
                text="Generate CUID to clipboard"
                description="Generate a new CUID to clipboard">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt O"
                               second-keystroke="shift meta alt C"/>
        </action>
        <action id="cuidgenerator.on-demand-popup"
                class="com.github.leomillon.uuidgenerator.action.cuid.GenerateCUIDPopupAction"
                text="Generate CUID Popup"
                description="Show the CUID generator Popup">
            <add-to-group group-id="GenerateGroup"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift meta alt O"
                               second-keystroke="shift meta alt P"/>
        </action>
    </actions>

</idea-plugin>
